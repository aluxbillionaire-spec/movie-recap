# Global Configuration for Prometheus monitoring

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'movie-recap-global'
    region: '${REGION}'

# Rules for alerting
rule_files:
  - "/etc/prometheus/rules/*.yml"

# Alert manager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Backend API monitoring
  - job_name: 'backend-api'
    metrics_path: '/metrics'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'backend-api'

  # Worker monitoring
  - job_name: 'celery-workers'
    metrics_path: '/metrics'
    static_configs:
      - targets: ['worker:9540']
    scrape_interval: 15s

  # Database monitoring
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s

  # Redis monitoring
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s

  # Node exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s

  # Docker container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s

  # Nginx/Load balancer metrics
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s

  # Application-specific metrics
  - job_name: 'movie-recap-metrics'
    metrics_path: '/api/v1/metrics'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__name__]
        regex: 'movie_recap_.*'
        target_label: __name__
        replacement: '${1}'

  # Multi-tenant metrics (per tenant)
  - job_name: 'tenant-metrics'
    metrics_path: '/api/v1/tenants/metrics'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 60s
    metric_relabel_configs:
      - source_labels: [tenant_id]
        target_label: tenant
      - source_labels: [tenant_name]
        target_label: tenant_name

  # Geographic metrics (per region)
  - job_name: 'geo-metrics'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 60s
    relabel_configs:
      - target_label: region
        replacement: '${REGION}'
      - target_label: datacenter
        replacement: '${DATACENTER}'

# Remote write for central monitoring (optional)
remote_write:
  - url: "https://prometheus-central.movierecap.com/api/v1/write"
    basic_auth:
      username: "${PROMETHEUS_REMOTE_USER}"
      password: "${PROMETHEUS_REMOTE_PASSWORD}"
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'movie_recap_.*'
        action: keep

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 50GB
    wal-compression: true